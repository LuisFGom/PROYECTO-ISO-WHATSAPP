// frontend/src/presentation/router/AppRouter.tsx
import { Routes, Route, Navigate } from 'react-router-dom';
import { useEffect, useState } from 'react';
import { useAuthStore } from '../store/authStore';

// ðŸ›‘ CORRECCIÃ“N DE RUTAS: Eliminado el doble 'pages'
import { LoginPage } from '../pages/LoginPage'; 
import { RegisterPage } from '../pages/RegisterPage'; 
import { HomePage } from '../pages/HomePage'; 

// --- PrivateRoute ---
const PrivateRoute = ({ children }: { children: React.ReactNode }) => {
Â  const isAuthenticated = useAuthStore((state) => state.isAuthenticated);
Â  return isAuthenticated ? <>{children}</> : <Navigate to="/login" replace />;
};

// --- PublicRoute (RedirecciÃ³n Inmediata) ---
const PublicRoute = ({ children }: { children: React.ReactNode }) => {
Â  // ðŸ›‘ CLAVE: Reacciona al cambio de estado de isAuthenticated
Â  const isAuthenticated = useAuthStore((state) => state.isAuthenticated);
Â  
Â  console.log('ðŸ”· PublicRoute renderizado');
Â  console.log('ðŸ”· isAuthenticated actual:', isAuthenticated);
Â  
Â  if (!isAuthenticated) {
Â  Â  console.log('ðŸ”· Mostrando children (no autenticado)');
Â  Â  return <>{children}</>;
Â  } else {
Â  Â  // Se ejecuta inmediatamente al llamar a setAuth en LoginPage
Â  Â  console.log('ðŸ”·ðŸ”·ðŸ”· LOGIN EXITOSO: NAVEGANDO A /home ðŸ”·ðŸ”·ðŸ”·');
Â  Â  return <Navigate to="/home" replace />;
Â  }
};

// --- AppRouter ---
export const AppRouter = () => {
Â  const initAuth = useAuthStore((state) => state.initAuth);
Â  const [isInitializing, setIsInitializing] = useState(true);

Â  useEffect(() => {
Â  Â  initAuth();
Â  Â  setIsInitializing(false);
Â  Â  // eslint-disable-next-line react-hooks/exhaustive-deps
Â  }, []);

Â  if (isInitializing) { 
Â  Â  return (
Â  Â  Â  <div className="flex h-screen items-center justify-center">
Â  Â  Â  Â  <div className="text-xl text-whatsapp-green">Cargando...</div>
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  return (
Â  Â  <Routes>
Â  Â  Â  <Route
Â  Â  Â  Â  path="/login"
Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  <PublicRoute>
Â  Â  Â  Â  Â  Â  <LoginPage />
Â  Â  Â  Â  Â  </PublicRoute>
Â  Â  Â  Â  }
Â  Â  Â  />
Â  Â  Â  <Route
Â  Â  Â  Â  path="/register"
Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  <PublicRoute>
Â  Â  Â  Â  Â  Â  <RegisterPage />
Â  Â  Â  Â  Â  </PublicRoute>
Â  Â  Â  Â  }
Â  Â  Â  />
Â  Â  Â  <Route
Â  Â  Â  Â  path="/home"
Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  <PrivateRoute>
Â  Â  Â  Â  Â  Â  <HomePage />
Â  Â  Â  Â  Â  </PrivateRoute>
Â  Â  Â  Â  }
Â  Â  Â  />
Â  Â  Â  <Route path="/" element={<Navigate to="/login" replace />} />
Â  Â  Â  <Route path="*" element={<Navigate to="/login" replace />} />
Â  Â  </Routes>
Â  );
};